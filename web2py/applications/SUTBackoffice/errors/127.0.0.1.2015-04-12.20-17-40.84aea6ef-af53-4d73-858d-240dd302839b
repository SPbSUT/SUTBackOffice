(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> 'ObjectMetaclass' object is not iterable"
p3
sS'layer'
p4
S'/home/ze0/Workspace/SUTBackoffice/web2py/applications/SUTBackoffice/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    response.pageTitle = T("Dashboard")\n    response.pageSubtitle = T("overview of the application")\n    response.flash = T("Hello World")\n    return dict(message=T(\'Welcome to web2py!\'))\n\ndef rooms():\n    rooms="test"\n\n    import parse_rest.datatypes\n\n    class items(parse_rest.datatypes.Object):\n        pass\n\n    rooms = items.Query.all()\n\n    form = SQLFORM(items)\n\n\n    response.pageTitle = T("Rooms management")\n    response.pageSubtitle = T("All information about rooms in university")\n    return dict(rooms=rooms, form=form)\n\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n\nresponse._vars=response._caller(rooms)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/ze0/Workspace/SUTBackoffice/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/ze0/Workspace/SUTBackoffice/web2py/applications/SUTBackoffice/controllers/default.py", line 81, in <module>\n  File "/home/ze0/Workspace/SUTBackoffice/web2py/gluon/globals.py", line 393, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/ze0/Workspace/SUTBackoffice/web2py/applications/SUTBackoffice/controllers/default.py", line 34, in rooms\n    form = SQLFORM(items)\n  File "/home/ze0/Workspace/SUTBackoffice/web2py/gluon/sqlhtml.py", line 1078, in __init__\n    fields = [f.name for f in table if\nTypeError: \'ObjectMetaclass\' object is not iterable\n'
p11
s.